#########################################
Lamba function, Delegates
#########################################

The => operator can be used in two ways in C#:

As the lambda operator in a lambda expression, it separates the input variables from the lambda body.

In an expression body definition, it separates a member name from the member implementation.

string[] words = { "cherry", "apple", "blueberry" };  

// Use method syntax to apply a lambda expression to each element  
// of the words array.   
int shortestWordLength = words.Min(w => w.Length);  
Console.WriteLine(shortestWordLength); 


public override string ToString() => $"{fname} {lname}".Trim();